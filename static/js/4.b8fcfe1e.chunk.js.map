{"version":3,"sources":["components/pages/Product/Product.js"],"names":["Product","onSubmit","size","props","product","image","name","price","id","addToCart","quantity","this","setNavColor","className","src","alt","description","Component","connect","state","ownProps","firestoreProducts","filter","match","params"],"mappings":"0NAMMA,E,4MAWJC,SAAW,SAACC,GACV,MAAmC,EAAKC,MAAMC,QAAtCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,GAG5B,EAAKL,MAAMM,UAAU,CAAED,KAAIF,OAAMD,QAAOE,QAAOG,SAAU,EAAGR,U,uDAb9D,WACES,KAAKR,MAAMS,YAAY,Y,kCAGzB,WACED,KAAKR,MAAMS,YAAY,Q,oBAWzB,WACE,IAAQR,EAAYO,KAAKR,MAAjBC,QAER,OACE,6BAASS,UAAU,WAEhBT,GACC,kBAAC,WAAD,KACE,yBAAMS,UAAU,oBACd,yBAAKA,UAAU,iBAAiBC,IAAKV,EAAQC,MAAOU,IAAKX,EAAQE,QAGnE,yBAAKO,UAAU,iBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,cAAcT,EAAQE,MACpC,0BAAMO,UAAU,4BAAhB,WAAgDT,EAAQG,QAExD,uBAAGM,UAAU,4BAA4BT,EAAQY,cAEnD,kBAAC,IAAD,CAAaf,SAAUU,KAAKV,cAKlCG,GAAW,kBAAC,IAAD,W,GA1CGa,aAwDPC,uBANS,SAACC,EAAOC,GAC9B,MAAO,CACLhB,QAASe,EAAME,kBAAkBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQI,KAAOY,EAASG,MAAMC,OAAOlB,QAAM,MAI1D,CAACG,cAAWG,iBAArCM,CAAoDlB","file":"static/js/4.b8fcfe1e.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'; \nimport { addToCart, setNavColor } from '../../../actions'; \nimport ProductForm from '../../ProductForm/ProductForm'; \nimport Loading from '../../Loading';\n\nclass Product extends Component {\n\n  componentDidMount () {\n    this.props.setNavColor('opaque'); \n  } \n\n  componentWillUnmount() {\n    this.props.setNavColor(null);\n  }   \n\n  // Callback for ProductForm\n  onSubmit = (size) => {\n    const { image, name, price, id } = this.props.product;\n\n    // a product obj with a quantity and size is sent to addToCart()\n    this.props.addToCart({ id, name, image, price, quantity: 1, size })\n  }\n \n  render () {\n    const { product } = this.props;\n\n    return (\n      <section className=\"Product\">\n\n        {product && \n          <Fragment>\n            < div className=\"Product__Gallery\">\n              <img className=\"Product__Image\" src={product.image} alt={product.name}></img>\n            </div>  \n      \n            <div className=\"Product__Info\">\n              <div className=\"Product__Meta\">\n                <h1 className=\"Heading h2\">{product.name}</h1>\n                <span className=\"Heading Text--subdued h4\">{`$${product.price}`}</span>\n                {/* <p>or 4 interest free installments of bla bla bla</p> */}\n                <p className=\"ProductMeta__Description\">{product.description}</p>\n              </div>\n              <ProductForm onSubmit={this.onSubmit} />\n            </div>\n          </Fragment>\n        }\n\n      {!product && <Loading/>}\n          \n      </section>\n    );\n  }    \n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    product: state.firestoreProducts.filter(product => product.id === ownProps.match.params.name)[0]\n  }\n}\n\nexport default connect(mapStateToProps, {addToCart, setNavColor })(Product);"],"sourceRoot":""}